"DEBUGGING IS TWICE AS HARD AS WRITING THE CODE IN THE FIRST PLACE. THEREFORE, IF YOU WRITE THE CODE AS CLEVERLY AS POSSIBLE, YOU ARE, BY DEFINITION, NOT SMART ENOUGH TO DEBUG IT" — BRIAN W. KERNIGHAN
"SOME PEOPLE, WHEN CONFRONTED WITH A PROBLEM, THINK - I KNOW, I'LL USE REGULAR EXPRESSIONS. NOW THEY HAVE TWO PROBLEMS" — JAMIE ZAWINSKI
"A LANGUAGE THAT DOESN'T AFFECT THE WAY YOU THINK ABOUT PROGRAMMING, IS NOT WORTH KNOWING" — ALAN PERLIS
"THERE ARE 2 HARD PROBLEMS IN COMPUTER SCIENCE: CACHE INVALIDATION, NAMING THINGS, AND OFF-BY-1 ERRORS" — LEON BAMBRICK
"SO MUCH COMPLEXITY IN SOFTWARE COMES FROM TRYING TO MAKE ONE THING DO TWO THINGS" — RYAN SINGER
"THERE ARE TWO WAYS OF CONSTRUCTING A SOFTWARE DESIGN: ONE WAY IS TO MAKE IT SO SIMPLE THAT THERE ARE OBVIOUSLY NO DEFICIENCIES AND THE OTHER WAY IS TO MAKE IT SO COMPLICATED THAT THERE ARE NO OBVIOUS DEFICIENCIES." — C.A.R. HOARE
"THE COMPUTING SCIENTIST’S MAIN CHALLENGE IS NOT TO GET CONFUSED BY THE COMPLEXITIES OF HIS OWN MAKING." — E. W. DIJKSTRA
"ONE OF MY MOST PRODUCTIVE DAYS WAS THROWING AWAY 1000 LINES OF CODE." — KEN THOMPSON
"CONTROLLING COMPLEXITY IS THE ESSENCE OF COMPUTER PROGRAMMING." — BRIAN KERNIGHAN
"UNIX IS SIMPLE. IT JUST TAKES A GENIUS TO UNDERSTAND ITS SIMPLICITY." — DENNIS RITCHIE
"MEASURING PROGRAMMING PROGRESS BY LINES OF CODE IS LIKE MEASURING AIRCRAFT BUILDING PROGRESS BY WEIGHT." — BILL GATES
"PROGRAM TESTING CAN BE A VERY EFFECTIVE WAY TO SHOW THE PRESENCE OF BUGS, BUT IS HOPELESSLY INADEQUATE FOR SHOWING THEIR ABSENCE." — E. W. DIJKSTRA
"WHAT I CANNOT BUILD, I DO NOT UNDERSTAND." — RICHARD FEYNMAN